name: phpstan-analyze-phpunit-test

on:
  push:
    branches:
      - develop
  workflow_dispatch:
jobs:
  # phpstan-analyze:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout Code
  #     uses: actions/checkout@v3
  #   - name: Install Composer Dependencies
  #     uses: php-actions/composer@v6
  #     with:
  #       php_version: "8.2"
  #       version: "2.5.8"
  #   - name: Run PHPStan Static Code Analysis

  #     This uses the official PHPStan GitHub Action
  #     uses: php-actions/phpstan@v3
  #     with:
  #       path: app/ config/ database/ public/ routes/web.php tests/ resources/
  #       memory-limit: 2g

  #     Using Locally Installed PHPStan via Composer
  #     run : ./vendor/bin/phpstan analyse app config database public routes/web.php tests resources --memory-limit=2g
  
  ptpstan-phpunit:
    # runs-on: ubuntu-latest
    runs-on: self-host-ubunto-cont

    # needs: phpstan-analyze
    services:
      mysql:
        image: mysql:8.0
        env:
          # The MySQL docker container requires these environment variables to be set
          # so we can create and migrate the test database.
          # See: https://hub.docker.com/_/mysql
          MYSQL_DATABASE: test-db
          MYSQL_ROOT_PASSWORD: pass
        ports:
          # Opens port 3306 on service container and host
          # https://docs.github.com/en/actions/using-containerized-services/about-service-containers
          - 3306:3306
          # Before continuing, verify the mysql container is reachable from the ubuntu host
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
    - name: Copy .env.testing to .env
      run: php -r "file_exists('.env') || copy('.env.testing', '.env');"
    - name: Validate composer.json and composer.lock
      run: composer validate --strict
    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-
    - name: Install composer dependencies
      run: composer install --prefer-dist --no-progress
    - name: Run PHPStan Static Code Analysis
      run : ./vendor/bin/phpstan analyse app config database public routes/web.php tests resources --memory-limit=2g
    - name: Generate key
      run: php artisan key:generate
    - name: Migrate Tables to MySQL Database
      env:
        DB_CONNECTION: mysql
        DB_DATABASE: test-db
      run: php artisan migrate
    - name: Run php unit test
      env:
        DB_CONNECTION: mysql
        DB_DATABASE: test-db
      run: php artisan test



  # If phpstan-analyze and phpunit-test job succeeds, branch "source" will be merged to branch "target".
  # Also created a separate workflow that can be triggered when this workflow succeeds.

  # merge-develop-to-prod: 
  #   needs: [phpstan-analyze, phpunit-test]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: everlytic/branch-merge@1.1.2
  #       with:
  #         github_token: ${{ secrets.GH_TOKEN }}
  #         source_ref: "${{ secrets.MERGE_WORKFLOW_SOURCE_BRANCH }}"
  #         target_branch: "${{ secrets.MERGE_WORKFLOW_TARGET_BRANCH }}"
  #         commit_message_template: "[Automated] Merged {source_ref} into {target_branch}"
