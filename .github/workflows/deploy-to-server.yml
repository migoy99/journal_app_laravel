name: deploy-to-subdomain
run-name: Deploy Changes to Ronins Server
on: 
  release:
    types:
      - created
jobs:

  deploy-to-ronins:
    name: Deploy to Ronins server
    runs-on: ubuntu-latest
    permissions:
      deployments: write
    steps:

      - name: Create GitHub deployment
        uses: chrnorm/deployment-action@v2
        id: deployment
        with:
          token: '${{ secrets.GH_TOKEN }}'
          environment-url: http://mtrinidad.ronins.site
          environment: production

      - name: Set up SSH and Deploy changes to Ronins Server
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/deploy-key
          chmod 600 ~/.ssh/deploy-key
          cat >>~/.ssh/config <<END
          Host prod
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/deploy-key
            StrictHostKeyChecking no
          END
          ssh prod
          cd ${{ secrets.DEPLOYMENT_DIRECTORY }}
          bash ${{ secrets.FETCH_CHECKOUT_TAG_SCRIPT_PATH }}
          ${{ vars.PHP_BINARY_PATH }} composer.phar install --no-dev
          ${{ vars.PHP_BINARY_PATH }} artisan migrate --force
          ${{ vars.PHP_BINARY_PATH }} artisan config:cache
          ${{ vars.PHP_BINARY_PATH }} artisan event:cache
          ${{ vars.PHP_BINARY_PATH }} artisan route:cache
          ${{ vars.PHP_BINARY_PATH }} artisan view:cache
          exit
        env:
          SSH_USER: ${{ secrets.PROD_SSH_USER }}
          SSH_KEY: ${{ secrets.PROD_SSH_PRIVATE_KEY }}
          SSH_HOST: ${{ secrets.PROD_SSH_HOST }}

      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@v2
        with:
          token: '${{ secrets.GH_TOKEN }}'
          environment-url: ${{ steps.deployment.outputs.environment_url }}
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
          state: 'success'

      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@v2
        with:
          token: '${{ secrets.GH_TOKEN }}'
          environment-url: ${{ steps.deployment.outputs.environment_url }}
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
          state: 'failure'
